[{"D:\\react app\\my-app\\src\\index.js":"1","D:\\react app\\my-app\\src\\App.js":"2","D:\\react app\\my-app\\src\\reportWebVitals.js":"3","D:\\react app\\my-app\\src\\Navbar.js":"4","D:\\react app\\my-app\\src\\Sample.js":"5"},{"size":5802,"mtime":1612967722364,"results":"6","hashOfConfig":"7"},{"size":7092,"mtime":1612976626098,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":374,"mtime":1612683616410,"results":"10","hashOfConfig":"7"},{"size":286,"mtime":1612873412816,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1k11f6w",{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},"D:\\react app\\my-app\\src\\index.js",["26","27","28","29","30"],"D:\\react app\\my-app\\src\\App.js",["31","32","33","34","35"],"import React, { useState,useEffect,useCallback} from \"react\";\n//import logo from './logo.svg';\nimport loader from './loader.png'\nimport './App.css';\n\nimport Sample from './Sample';\n//import Carousel from 'react-bootstrap/Carousel'\n/*var slideIndex = 1;\nshowSlides(slideIndex);\n\nfunction plusSlides(n) {\n  showSlides(slideIndex += n);\n}\n\nfunction currentSlide(n) {\n  showSlides(slideIndex = n);\n}\n\nfunction showSlides(n) {\n  var i;\n  var slides = document.getElementsByClassName(\"mySlides\");\n  var dots = document.getElementsByClassName(\"dot\");\n  if (n > slides.length) {slideIndex = 1}\n    if (n < 1) {slideIndex = slides.length}\n    for (i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n    }\n    for (i = 0; i < dots.length; i++) {\n      dots[i].className = dots[i].className.replace(\" active\", \"\");\n    }\n  slides[slideIndex-1].style.display = \"block\";\n  dots[slideIndex-1].className += \" active\";\n}\n\n*/\n\n\nfunction App(props) {\n  const [location, setLocation] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [data, setData] = useState([]);\n  const [flag,setFlag] =useState(false);\n  const [name, setName] = useState(props.name)\n  const [disable,setDisable]= useState(false);\n  const [indexes, setIndexes] = useState({\n    previousIndex: 0,\n    currentIndex: 0,\n    nextIndex: 1\n  });\n \n\n  function submitDetails(e){\n    if(location===\"\"||description===\"\")\n    {\n      alert(\"Please fill all the details.\")\n    }\n    else{\n      setData([]);\n      setDisable(false);\n    setFlag(true);\n    var queryURL = `https://parv-job-server.herokuapp.com/${location}/${description}`\n    \n    \n    // make AJAX request using fetch API\n    fetch(queryURL)\n        .then(function (response) {\n            //return response;\n            return response.json();\n        })\n        .then(function (result) {\n          for(let i=0; i<result.length;i++){\n            Object.defineProperty(result[i],'showmore',{\n              value:0,\n              writable:true\n            })\n          }\n          for(let i=0; i<result.length;i++){\n            Object.defineProperty(result[i],'showcard',{\n              value:0,\n              writable:true\n            })\n          }\n          if(result.length>0)\n          result[0].showcard=1;\n          setData(result); \n         setDisable(true);\n          console.log(result);\n          setFlag(false); \n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n       // console.log(queryURL);\n    }\n       e.preventDefault();\n      \n    \n  }\n  \n \nfunction renderItems(){\n  const mapRows = data.map((item, index)=>(\n\n\n    <ul key = {item.id}>\n   { item.showcard === 1?<span className = \"card active\"  >\n\n  <h2><span><b>Company Name : </b>{item.company}</span></h2>\n  <br></br><img width =\"200px\"  src = {item.company_logo} className = \"logo\"></img>\n  <br></br><span><a href={item.company_url}>{item.company_url}</a></span>\n  \n  <br></br><b >Created at : </b><span>{item.created_at}</span>\n  <br></br><b>Job title : </b><span>{item.title}</span>\n  <br></br><b>Job Location : </b><span>{item.location}</span>\n  <br></br><b>Employment Type : </b> <span>{item.type}</span>\n\n {item.showmore === 1 ? <span><br></br><b>Job Description : </b><br></br> <span className=\"abcd\" dangerouslySetInnerHTML={{__html: item.description}} ></span>\n  <br></br><div id=\"apply\"><b>How to Apply?</b>< span dangerouslySetInnerHTML={{__html: item.how_to_apply}} ></span></div>\n  <br></br><button className=\"btn btn-primary\" onClick ={ (e)=>{e.preventDefault(); item.showmore= 0;}}>Show Less</button></span> :<span></span>}\n  <br></br>{item.showmore === 0 ? <span><button className=\"btn btn-danger\" onClick ={ (e)=>{e.preventDefault(); item.showmore= 1;}}>Show More</button></span>:<span></span>}\n  \n  \n  \n\n\n</span>:<span></span>}\n</ul>\n\n  \n  ));\n  \n  return (  mapRows);\n}\nfunction handlePrevious(e){\nfor(let i= data.length -1 ; i>=0 ; i=i-1){\n  if(data[i].showcard===1){\n    if(i=== 0){\n      \n      data[i].showcard = 0;\n      data[data.length-1].showcard = 1;\n      break;\n    }\n    else{\n    data[i].showcard = 0;\n    data[i-1].showcard = 1;\n\n    break;\n    }\n  }\n}\n}\nfunction handleNext(e){\n  for(let i =0; i<data.length;i++){\n    if(data[i].showcard===1){\n      if(i===(data.length-1)){\n        data[i].showcard = 0;\n        data[0].showcard = 1;\n        break;\n      }\n      else{\n      \n      data[i].showcard = 0;\n      data[i+1].showcard = 1;\n      break;\n      }\n    }\n  }\n}\nfunction resetDetails(e){\n  setLocation(\"\");\n  setDescription(\"\");\n  setDisable(false);\n  setData([]);\n}\n  function handleChange(e) {\n    setLocation(e.target.value);\n  }\n  function handleChangeDesc(e) {\n    setDescription(e.target.value);\n  }\n  const handleCardTransition = useCallback(() => {\n    // If we've reached the end, start again from the first card,\n    // but carry previous value over\n    if (indexes.currentIndex >= data.length - 1) {\n      setIndexes({\n        previousIndex: data.length - 1,\n        currentIndex: 0,\n        nextIndex: 1\n      });\n    } else {\n      setIndexes(prevState => ({\n        previousIndex: prevState.currentIndex,\n        currentIndex: prevState.currentIndex + 1,\n        nextIndex:\n          prevState.currentIndex + 2 === data.length\n            ? 0\n            : prevState.currentIndex + 2\n      }));\n    }\n  }, [indexes.currentIndex]);\n\n  useEffect(() => {\n    const transitionInterval = setInterval(() => {\n      handleCardTransition();\n    }, 1000);\n\n    return () => clearInterval(transitionInterval);\n  }, [handleCardTransition, indexes]);\n  useEffect(()=>{\n    setName(props.name)\n});\n\n  return (\n   \n    <div className=\"App\">\n     {disable=== false?<div>  <p id=\"hi\">Hi {name}!</p>\n      <h6 id=\"line\">Enter the job location and description for the job below </h6>\n      </div>:<span></span>}<form>\n       \n        <input placeholder=\"Enter city, state, zip code or country\" className=\"textbox m-2\" onChange={handleChange}  id = \"loc\" value={location}/>\n        <input placeholder = \"Enter title, expertise, e.g. development\"  className=\"textbox m-2\"  onChange={handleChangeDesc} value={description} id=  \"desc\"/>\n        <br className=\"resp\"></br>\n        <button className=\"searchbtn\"  onClick={submitDetails} btype = \"submit\" ><i className=\"srch fa fa-search\"></i></button>\n       {disable=== true? <button className=\"searchbtn\"  onClick={resetDetails} btype = \"submit\" href=\"\" >Reset</button>:<span></span>}\n       \n\n       \n        </form>\n       {flag === true ? <img className=\"loader\" src={loader}></img>:<span></span>}\n       <br></br>\n  {disable=== true? <span className=\"xyz\" >{data.length} jobs found.</span>:<span></span>}\n  <br></br>\n       {data.length!==0? <span><br></br><button className ='prevbtn fas' onClick={handlePrevious}>&#xf100;</button><button className ='nxtbtn fas' onClick={handleNext}>&#xf101;</button></span>:<span></span>}\n      <br></br>\n       <div className=\"container\">\n      <ul className=\"card-carousel\">\n        {renderItems()}\n       \n       \n       </ul>\n       \n       </div>\n       \n      </div>\n  );\n}\n\nexport default App;\n","D:\\react app\\my-app\\src\\reportWebVitals.js",[],["36","37"],"D:\\react app\\my-app\\src\\Navbar.js",["38","39","40"],"import React, { useState} from \"react\";\r\nimport './App.css';\r\nimport logo from './git_logo.png';\r\n//import { Navbar } from 'react-bootstrap';\r\n\r\nfunction Navbar() {\r\nreturn(\r\n    <nav className=\"navbar navbar-dark x\">\r\n        <a className=\"anav navbar-brand\" href=\"\"><img src = {logo} style={{height:'1.2cm'}}></img>&nbsp;  FIND JOB</a></nav>\r\n);\r\n}\r\nexport default Navbar;","D:\\react app\\my-app\\src\\Sample.js",["41"],"import React, { useState, useEffect} from \"react\";\r\nimport './App.css';\r\n\r\nfunction Sample(props) {\r\n    const[loc,setLoc] = useState(props.value)\r\n   useEffect(()=>{\r\n       setLoc(props.value)\r\n   });\r\n    return(\r\n    <h1>{loc}</h1>\r\n    );\r\n    }\r\n    export default Sample;\r\n\r\n    ",{"ruleId":"42","severity":1,"message":"43","line":11,"column":62,"nodeType":"44","messageId":"45","endLine":11,"endColumn":70},{"ruleId":"42","severity":1,"message":"46","line":11,"column":72,"nodeType":"44","messageId":"45","endLine":11,"endColumn":78},{"ruleId":"47","severity":1,"message":"48","line":25,"column":15,"nodeType":"49","messageId":"50","endLine":25,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":25,"column":29,"nodeType":"49","messageId":"50","endLine":25,"endColumn":31},{"ruleId":"47","severity":1,"message":"48","line":40,"column":12,"nodeType":"49","messageId":"50","endLine":40,"endColumn":14},{"ruleId":"42","severity":1,"message":"51","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":109,"column":12,"nodeType":"54","endLine":109,"endColumn":78},{"ruleId":"55","severity":1,"message":"56","line":200,"column":6,"nodeType":"57","endLine":200,"endColumn":28,"suggestions":"58"},{"ruleId":"55","severity":1,"message":"59","line":209,"column":3,"nodeType":"44","endLine":209,"endColumn":12,"suggestions":"60"},{"ruleId":"52","severity":1,"message":"53","line":229,"column":25,"nodeType":"54","endLine":229,"endColumn":62},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"42","severity":1,"message":"65","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":9,"column":9,"nodeType":"54","endLine":9,"endColumn":50},{"ruleId":"52","severity":1,"message":"53","line":9,"column":50,"nodeType":"54","endLine":9,"endColumn":93},{"ruleId":"55","severity":1,"message":"68","line":6,"column":4,"nodeType":"44","endLine":6,"endColumn":13,"suggestions":"69"},"no-unused-vars","'MDBInput' is defined but never used.","Identifier","unusedVar","'MDBBtn' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Sample' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'data.length'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIndexes' needs the current value of 'data.length'.","ArrayExpression",["70"],"React Hook useEffect contains a call to 'setName'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.name] as a second argument to the useEffect Hook.",["71"],"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect contains a call to 'setLoc'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.value] as a second argument to the useEffect Hook.",["74"],{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [data.length, indexes.currentIndex]",{"range":"81","text":"82"},"Add dependencies array: [props.name]",{"range":"83","text":"84"},"Add dependencies array: [props.value]",{"range":"85","text":"86"},[5329,5351],"[data.length, indexes.currentIndex]",[5605,5605],", [props.name]",[200,200],", [props.value]"]